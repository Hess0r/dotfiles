# DEFAULT
# ==========================================================
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
# ==========================================================

# EXPORTS
# ==========================================================
export DOTFILES="$HOME/dotfiles"

if type nvim &>/dev/null; then
  export EDITOR=nvim
  export VISUAL=nvim
else
  export EDITOR=vim
  export VISUAL=vim
fi

export GOBIN="$HOME/go/bin"
export GOPATH="$HOME/go"
export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin
export PATH=$PATH:$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin
export PATH=$PATH:$HOME/.config/composer/vendor/bin

export STARSHIP_CONFIG="$HOME/.config/starship/config.toml"

FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' "
FZF_DEFAULT_OPTS+="--bind alt-j:preview-down,alt-k:preview-up "
FZF_DEFAULT_OPTS+="--preview '([[ -f {} ]] && (bat --color=always --style=header,grid --line-range :300 {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2>/dev/null | head -200'"
export FZF_DEFAULT_OPTS
# export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_DEFAULT_COMMAND="rg --files"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

export NNN_FIFO='/tmp/nnn.fifo'
export NNN_PLUG='p:preview-tui'
# ==========================================================

# ALIASES
# ==========================================================
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
if type nvim &>/dev/null; then
  alias vim='nvim'
  alias v='vim'
fi

alias nn="n -Hde"

alias lg="lazygit"
alias ld="lazydocker"

alias dco="docker compose"
alias dcb="docker compose build"
alias dce="docker compose exec"
alias dcps="docker compose ps"
alias dcc="docker compose config"
alias dcrestart="docker compose restart"
alias dcrm="docker compose rm"
alias dcr="docker compose run"
alias dcstop="docker compose stop"
alias dcup="docker compose up"
alias dcupb="docker compose up --build"
alias dcupd="docker compose up -d"
alias dcdn="docker compose down"
alias dcl="docker compose logs"
alias dclf="docker compose logs -f"
alias dcpull="docker compose pull"
alias dcstart="docker compose start"
alias dck="docker compose kill"

alias artisan='php artisan'
alias pas='php artisan serve'
alias pasd='XDEBUG_SESSION=1 php artisan serve'
alias pam='php artisan migrate'
alias pamf='php artisan migrate:fresh'
alias pamfs='php artisan migrate:fresh --seed'
alias pamr='php artisan migrate:rollback'
alias pads='php artisan db:seed'
alias pamm='php artisan make:model'
alias pamc='php artisan make:controller'
alias pams='php artisan make:seeder'
alias pamt='php artisan make:test'
alias pamfa='php artisan make:factory'
alias pamp='php artisan make:policy'
alias pame='php artisan make:event'
alias pamj='php artisan make:job'
alias paml='php artisan make:listener'
alias pamn='php artisan make:notification'
alias pampp='php artisan make:provider'
alias pacac='php artisan cache:clear'
alias pacoc='php artisan config:clear'
alias pavic='php artisan view:clear'
alias paroc='php artisan route:clear'
alias paqf='php artisan queue:failed'
alias paqft='php artisan queue:failed-table'
alias paql='php artisan queue:listen'
alias paqr='php artisan queue:retry'
alias paqt='php artisan queue:table'
alias paqw='php artisan queue:work'
alias sail='./vendor/bin/sail'
alias pint='./vendor/bin/pint'
alias phpstan='./vendor/bin/phpstan'

alias dotfiles="cd $DOTFILES"

alias tx='tmuxinator'

alias gs='git status'
alias gco='git checkout'
alias ga='git add'
alias gaa='git add --all'
alias gb='git branch'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias glog="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset%s%Cgreen(%cr) %C(bold blue)<%an>%Creset'"
alias glogs="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s%Cgreen(%cr) %C(bold blue)<%an>%Creset' --stat"
alias glogds="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s%Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
alias gloga="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s%Cgreen(%cr) %C(bold blue)<%an>%Creset' --all"
# ==========================================================

# COMPLETION
# ==========================================================
if type gh &>/dev/null; then
  eval "$(gh completion -s bash)"
fi
if type kind &>/dev/null; then
  source <(kind completion bash)
fi
if type kubectl &>/dev/null; then
  source <(kubectl completion bash)
fi
if type skaffold &>/dev/null; then
  source <(skaffold completion bash)
fi
if type direnv &>/dev/null; then
  eval "$(direnv hook bash)"
fi
if type terraform &>/dev/null; then
  complete -C "$(which terraform)" terraform
fi
if type packer &>/dev/null; then
  complete -C "$(which packer)" packer
fi

[ -f "`which starship`" ] && eval "$(starship init bash)"
[ -f /usr/share/doc/fzf/examples/completion.bash ] && source /usr/share/doc/fzf/examples/completion.bash
[ -f /usr/share/doc/fzf/examples/key-bindings.bash ] && source /usr/share/doc/fzf/examples/key-bindings.bash
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
# ==========================================================

# GHCUP (HASKELL)
# ==========================================================
[ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env"
# ==========================================================

# PATH
# ==========================================================
export PATH=$PATH:$HOME/.local/bin/scripts
# ==========================================================
